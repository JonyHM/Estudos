{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","resposta","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","parse","responseText","console","log","send"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,Q,EAAS;AACnB,4BAAG,CAACA,SAASC,EAAb,EAAgB,MAAM,IAAIC,KAAJ,CAAUF,SAASG,UAAnB,CAAN;AAChB,+BAAOH,QAAP;AACH;;;wCAEGI,G,EAAI;AAAA;;AAEJ,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAY,MAAKC,aAAL,CAAmBP,QAAnB,CAAZ;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAYN,SAASQ,IAAT,EAAZ;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAK;AAAA;;AAEX,+BAAOJ,MAAMD,GAAN,GAAY;AACfM,qCAAS,EAAC,gBAAiB,kBAAlB,EADM;AAEfC,oCAAQ,MAFO;AAGfC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHS,0BAKlBH,IALkB,CAKb;AAAA,mCAAY,OAAKC,aAAL,CAAmBP,QAAnB,CAAZ;AAAA,yBALa,CAAnB;;AAQA,4BAAIe,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBhB,GAAjB,EAAsB,IAAtB;AACAc,gCAAIG,gBAAJ;AACAH,gCAAII,kBAAJ,GAAyB,YAAM;AAC3B,oCAAGJ,IAAIK,UAAJ,IAAkB,CAArB,EAAuB;AACnB,wCAAGL,IAAIM,MAAJ,IAAc,GAAjB,EAAqB;AACjBR,gDAAQH,KAAKY,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAFD,MAEK;AACDC,gDAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BATD;AAUAR,gCAAIW,IAAJ,CAAShB,KAAKC,SAAL,CAAeL,IAAf,CAAT;AACH,yBAhBD;AAiBH","file":"HttpService.js","sourcesContent":["export class HttpService{\n\n    _handleErrors(resposta){\n        if(!resposta.ok)throw new Error(resposta.statusText);\n        return resposta;\n    }\n\n    get(url){\n\n        return fetch(url)\n            .then(resposta => this._handleErrors(resposta))\n            .then(resposta => resposta.json());\n    }\n\n    post(url, dado){\n\n        return fetch(url), {\n            headers: {\"Content-Type\" : \"application/json\"},\n            method: 'post',\n            body: JSON.stringify(dado)\n        }\n        .then(resposta => this._handleErrors(resposta))\n        \n        \n        new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open('POST', url, true); \n            xhr.setRequestHeader();\n            xhr.onreadystatechange = () => {\n                if(xhr.readyState == 4){\n                    if(xhr.status == 200){    \n                        resolve(JSON.parse(xhr.responseText));    \n                    }else{\n                        console.log(xhr.responseText);\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado));\n        });\n    }\n}"]}