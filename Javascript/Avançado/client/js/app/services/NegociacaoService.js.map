{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","obj","data","quantidade","valor","catch","erro","Error","cb","Promise","all","obterNecociacoesDaSemana","obterNecociacoesDaSemanaPassada","obterNecociacoesDaSemanaRetrasada","periodos","reduce","flatArray","array","concat","negociacao","getConnection","conexao","dao","adiciona","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {Negociacao} from '../models/Negociacao';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../daos/NegociacaoDao';\n\nexport class NegociacaoService{\n\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    obterNecociacoesDaSemana(){\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data),obj.quantidade, obj.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana!');\n            });\n    }\n    \n    obterNecociacoesDaSemanaPassada(){\n        \n        return this._http\n            .get('negociacoes/anterior')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data),obj.quantidade, obj.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana passada!');\n            });\n    }\n    \n    obterNecociacoesDaSemanaRetrasada(cb){\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data),obj.quantidade, obj.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada!');\n            });\n    }\n    \n    obterNegociacoes(){\n        return Promise.all([\n            this.obterNecociacoesDaSemana(), \n            this.obterNecociacoesDaSemanaPassada(), \n            this.obterNecociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n            let negociacoes = periodos\n            .reduce((flatArray, array) => flatArray.concat(array), []);\n\n            return negociacoes;\n        }).catch(erro => {\n            throw new Error(erro)\n        });\n    }\n\n    cadastra(negociacao){\n\n        return ConnectionFactory\n            .getConnection()\n            .then(conexao => new NegociacaoDao(conexao))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação cadastrada com sucesso!')        \n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível cadastrar estra negociação!');\n            });\n    }\n\n    lista(){\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações');\n            });\n    }\n\n    apaga(){\n\n        return ConnectionFactory\n            .getConnection()\n            .then(conexao => new NegociacaoDao(conexao))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso!')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações!')\n            });\n    }\n\n    importa(listaAtual){\n\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente =>\n                            negociacao.equals(negociacaoExistente)))\n            ).catch(erro =>{\n                console.log(erro);\n                throw new Error('Não foi possível importar as negociações!');\n            });\n    }\n}"]}